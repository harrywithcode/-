import java.util.ArrayList;
import java.util.List;

public class Union {
    public List<Integer> union(final int[] nums1, final int[] nums2) {
        int pointer1 = 0;
        int pointer2 = 0;
        List<Integer> resultContainer = new ArrayList<>();

        while (pointer1 < nums1.length && pointer2 < nums2.length) {
            if (nums1[pointer1] < nums2[pointer2]) {
                if (checkDuplicated(resultContainer, nums1[pointer1])) {
                    resultContainer.add(nums1[pointer1]);
                }
                pointer1++;
                //System.out.println("1");
            } else if (nums1[pointer1] > nums2[pointer2]) {
                if (checkDuplicated(resultContainer, nums2[pointer2])) {
                    resultContainer.add(nums2[pointer2]);
                }
                pointer2++;
                //System.out.println("2");
            } else if (nums1[pointer1] == nums2[pointer2]) {
                if (checkDuplicated(resultContainer, nums1[pointer1])) {
                    resultContainer.add(nums1[pointer1]);
                }
                pointer1++;
                pointer2++;
                //System.out.println("3");
            }
        }
        if (pointer1 < nums1.length) {
            while (pointer1 < nums1.length) {
                if (checkDuplicated(resultContainer, nums1[pointer1])) {
                    resultContainer.add(nums1[pointer1]);
                }
                pointer1++;
                //System.out.println("4");
            }
        }

        if (pointer2 < nums2.length) {
            while (pointer2 < nums2.length) {
                if (checkDuplicated(resultContainer, nums2[pointer2])) {
                    resultContainer.add(nums2[pointer2]);
                }
                pointer2++;
                //System.out.println("5");
            }
        }
        return resultContainer;
    }
    private boolean checkDuplicated(List<Integer> container, int input) {
        if (container.size() == 0 || input != container.get(container.size() - 1)) {
            return true;
        } else {
            return false;
        }
    }
    public static void main(String[] args) {
        Union u = new Union();
        int[] input1 = new int[]{1,1,2,2,2,2,3,3,4,5,6,7,8,8};
        int[] input2 = new int[]{4,4,4,5,6,6,7,8,9,9};
        List<Integer> result = u.union(input1, input2);

        for (int i : result) {
            System.out.println(i);
        }
    }
}
